# BIGTREETECH SKR MINI 2.0 (mcu)
# Firmware should be compiled for:  
# -- STM32F103 with a "28KiB bootloader". 
# -- "enable extra low-level configuration options" and 
# -- Configure "GPIO pins to set at micro-controller startup" to "!PA14"

# BIGTREETECH SKR MINI 1.2 (zboard)
# Firmware should be compiled for:
# -- STM32F103 with a "28KiB bootloader". 
# -- "enable extra low-level configuration options"
# -- Configure "GPIO pins to set at micro-controller startup" to "!PC13"

# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

## Voron Design VORON 0.2 SKR Mini E3 V2 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Motor currents                                                               [extruder] [stepper] and [_HOME_X/Y] macro sections
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info check https://docs.vorondesign.com/build/startup/#v0

[include mainsail.cfg]
[include KAMP_Settings.cfg]
[include TEST_SPEED.cfg]
[include bedScrewMenu.cfg]
[include PIS.cfg]
[exclude_object]
[skew_correction]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[display_status]

#####################################################################
# MCU -- Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################

[mcu] # SKR E3 Mini v2
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_38FFDA054253393812760257-if00

[mcu zboard] # SKR E3 Mini v1.2
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_33FFDD053046593219511851-if00

[printer]
kinematics: corexy
max_velocity: 400 ;200
max_accel: 6600 ;2000
max_z_velocity: 25 ;15
max_z_accel: 300
square_corner_velocity: 5.0 ;6.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: PB13
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: !PB12 ;PB12                                                # Check motor direction in the link above. If inverted, add a ! before PB12
enable_pin: !PB14
rotation_distance: 40                                               # rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm>
microsteps: 32 ;16 on original config
full_steps_per_rotation: 200                                        # Set to 400 for 0.9째 degree stepper motor, 200 is for 1.8째 stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
#endstop_pin: PC0 ;original config
position_endstop: 120
position_max: 120
homing_speed: 40 ;50 original config
homing_retract_dist: 5 ;0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: False
run_current: 0.35           
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^PC0  										            # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 70                                                   # This is set to 255, which is the MAX sensitivity for sensorless homing; you will need to tune this later

[stepper_y]
step_pin: PB10
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: !PB2 ;PB2                                                  # Check motor direction in the link above. If inverted, add a ! before PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 32 ;16 original config
full_steps_per_rotation: 200                                        # Set to 400 for 0.9째 degree stepper motor, 200 is for 1.8째 stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop
#endstop_pin: PC1 ; original config
position_endstop: 120
position_max: 120
homing_speed: 40 ;50 on original config
homing_retract_dist: 5 ;0 
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: False
run_current: 0.35            
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^PC1  													 # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK
driver_SGTHRS: 65                                                   # This is set to 255, which is the MAX sensitivity for sensorless homing; you will need to tune this later

#####################################################################
#   Z Stepper Settings
#####################################################################

######
# Z0 Stepper - Left Front
# X Motor (XM) Slot on zboard (skr 1.2)
[stepper_z]
step_pin: zboard:PB13
dir_pin: !zboard:PB12	                                             # Remove the ! if stepper is moving the opposite direction
enable_pin: !zboard:PB14
rotation_distance: 32                                                # rotation_distance = <belt_pitch> * <number_of_teeth_on_pulley>
full_steps_per_rotation: 200
microsteps: 32 ;16 original
endstop_pin: probe:z_virtual_endstop #if you want to use the Probe as z-endstop (You can uninstall the stock z endstop then. If not, remove the [homing_override])
#endstop_pin: zboard:PC2     
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 120

##--------------------------------------------------------------------
position_min: -2.5
homing_speed: 25 ;8.0                                                # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3 ;5 

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: zboard:PB15
interpolate: False
run_current: 1.0
#hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

######
#Z Stepper - Rear Center
#Y Motor (YM) Slot on zboard (skr 1.2)
###############
[stepper_z1]
step_pin: zboard:PB10
dir_pin: !zboard:PB2	                                              # Remove the ! if stepper is moving the opposite direction
enable_pin: !zboard:PB11
rotation_distance: 32     
full_steps_per_rotation: 200                                            # rotation_distance = <belt_pitch> * <number_of_teeth_on_pulley>  
microsteps: 32 ;16 original
#endstop_pin: zboard:PC1

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: zboard:PC6
interpolate: False
run_current: 1.0
#hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##  zboard (skr 1.2) MCU - In Z Position (ZM)
##  Z2 Stepper - Front Right

[stepper_z2]
step_pin: zboard:PB0
dir_pin: !zboard:PC5	                                               # Remove the ! if stepper is moving the opposite direction
enable_pin: !zboard:PB1
rotation_distance: 32                                                  # rotation_distance = <belt_pitch> * <number_of_teeth_on_pulley> 
full_steps_per_rotation: 200
microsteps: 32 ;16 original
#endstop_pin: zboard:PC2

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: zboard:PC10
interpolate: False
run_current: 1.0
#hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0                                                # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Extruder
#####################################################################
[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
full_steps_per_rotation: 200                                            ; Papilio Lite 8T Nema
gear_ratio: 44:8 ; 37:17                                                 ; Papilio Lite 8T Nema
rotation_distance: 56.2                                                 ; Papilio Lite 8T Nema ;4.5323025289344 ; sherpa mini
microsteps: 16
nozzle_diameter: 0.40
filament_diameter: 1.75
heater_pin: PC8
sensor_type: ATC Semitec 104NT-4-R025H42G                               ;SliceEngineering 450
sensor_pin: PA0
min_temp: 0
max_temp: 325
min_extrude_temp: 170
max_extrude_only_distance: 150 ;780 original config
max_extrude_cross_section: 5 ;0.8
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#Set appropriate once tuning your printer
pressure_advance: 0.05275  ;sherpa mini ASA                             # See tuning pressure advance doc
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: False
run_current: 0.7                                                        ## For Moons 8T
## For OMC (StepperOnline) 14HR07-1004VRN 1A 0.9째
#run_current: 0.5   # for OMC 14HR07-1004VRN rated at 1A
## For LDO LDO 36STH17-1004AHG 1A 1.8째 
#run_current: 0.3   # for LDO 36STH17-1004AHG
## For LDO LDO 36STH20-1004AHG 1A 1.8째 
#run_current: 0.6   # for LDO 36STH20-1004AHG
sense_resistor: 0.110
stealthchop_threshold: 0                                                 # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PC12
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
#sensor_type: NTC 100K beta 3950
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC3
smooth_time: 3.0
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe (Peck/Poke)
#####################################################################

######
#Z Max Connector on zboard Board
# !! Peck probe - Change your Z endstop pin from 'endstop_pin: Pin123' to 'endstop_pin: probe:z_virtual_endstop'
# https://github.com/chirpy2605/voron/tree/main/general/Experimental/Peck$0
###############
[probe]
##      If your probe is NO instead of NC, add change pin to !zboard:PC0
pin: zboard:PC2 #Change to where you plug your probe in, endstop or probe pin pulled high (^)
x_offset: 0  # measure per your specific setup (higher number places nozzle closer to bed)
y_offset: 0  # negative = left of the nozzle
z_offset: 0  # negative = in front of of the nozzle
samples: 3
samples_result: median
sample_retract_dist: 3
samples_tolerance: 0.006
samples_tolerance_retries: 3

#####################################################################
#   Probe (PZ)
#####################################################################

#[probe] ## Other parameters in config.cfg
#pin: zboard:PC2 
#x_offset: 0.0
#y_offset: 0.0
#speed: 5.0 #   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
#samples: 2
#sample_retract_dist: 3.0
#samples_tolerance_retries: 1
#lift_speed: 10
#activate_gcode:
#    G4 P200 ;Wait 200ms
#    SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.4
#    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.4
#    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.4
#    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.4
#deactivate_gcode:
#    {% set run_current = printer.configfile.config['tmc2209 stepper_z'].run_current | float %}
#    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={run_current}
#    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={run_current}
#    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={run_current}
#    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={run_current}

#####################################################################
#   Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: PC6
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0                                                       #If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0                                                         # You can't PWM the delta fan unless using blue wire

[fan]
pin: PC9
max_power: 1.0
kick_start_time: 0.5                                                    #depending on your fan, you may need to increase or reduce this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

[output_pin BentoMini]
pin: PC7
value: 0
shutdown_value: 0

#[fan_generic exhaust_fan]
#pin: PC7
#max_power: 1.0
#shutdown_speed: 0
#kick_start_time: 0.5

#####################################################################
#   Filament Runout Sensor
#####################################################################

#[filament_switch_sensor Filament_Runout_Sensor]
#pause_on_runout: True
#runout_gcode: PAUSE
#switch_pin: PC15

####################################################################
# INPUT SHAPER - MEASURE RESONANCES
####################################################################

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    60,60,20  # an example
    
[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 71.8
damping_ratio_x = 0.039
shaper_type_y = mzv
shaper_freq_y = 47.4
damping_ratio_y = 0.041


#####################################################################
# OPTIONAL TEMP SENSORS 
#####################################################################

# The rpi microcontroller is used as secondary.
#[mcu host]
#serial: /tmp/klipper_host_mcu

# Using the i2c bus of the RPi to read a sensor
#[temperature_sensor enclosure_temp]
#sensor_type: HTU21D
#i2c_mcu: host
#i2c_bus: i2c.1
#htu21d_hold_master: False

#[gcode_macro QUERY_ENCLOSURE]
#gcode:
#    {% set sensor = printer["htu21d enclosure_temp"] %}
#    {action_respond_info(
#        "Temperature: %.2f C\n"
#        "Humidity: %.2f%%" % (
#            sensor.temperature,
#           sensor.humidity))}

#[temperature_sensor chamber]
#sensor_type:  XXX
#sensor_pin:   XXX

[temperature_sensor Pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 90


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################


[idle_timeout]
timeout: 1800

[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 8,30
mesh_max: 120,120
probe_count: 5,5
adaptive_margin: 0
zero_reference_position: 60,60
algorithm: bicubic
fade_start: 1
fade_end: 10
#fade_target:
#   The z position in which fade should converge. When this value is set
#   to a non-zero value it must be within the range of z-values in the mesh.
#   Users that wish to converge to the z homing position should set this to 0.
#   Default is the average z value of the mesh.
split_delta_z: 0.015
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
move_check_distance: 3
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 4,4
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.


[homing_override]
axes: xyz
set_position_z: 0
gcode:
   G90
   G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}

#[safe_z_home]                      Only needed if you are using V0.0 or V0.1 Z endstop location
#home_xy_position: 120,120
#speed: 50.0
#z_hop: 5

## To be used with BED_SCREWS_ADJUST

#[bed_screws]
#screw1: 5,115
#screw1_name: front left
#screw2: 115,115
#screw2_name: front right
#screw3: 60,5
#screw3_name: back screw

#####################################################################
#   Servo - Brush
#####################################################################
[servo brush_servo]
pin: PA1 ;zboard:PA1
#   PWM output pin controlling the servo. This parameter must be
#   provided.
maximum_servo_angle: 90
#   The maximum angle (in degrees) that this servo can be set to. The
#   default is 180 degrees.
minimum_pulse_width: 0.0005
#   The minimum pulse width time (in seconds). This should correspond
#   with an angle of 0 degrees. The default is 0.001 seconds.
maximum_pulse_width: 0.001575
#   The maximum pulse width time (in seconds). This should correspond
#   with an angle of maximum_servo_angle. The default is 0.002
#   seconds.
initial_angle: 90
#   Initial angle (in degrees) to set the servo to. The default is to
#   not send any signal at startup.


[gcode_macro CLEAN_NOZZLE_OUT]
gcode:
   SAVE_GCODE_STATE
   #G90
   #G1 X1 Z105 F5000
   SET_SERVO SERVO=brush_servo ANGLE=16           ; set brush servo to up position
   #G1 Y60 F3600                                    ; toolhead moves back and fourth across the brush
   #G1 X2.5 F3600
   #G1 Y110 F5000                                   ; speed increase
   #G1 X5 F5000                                     
   #G1 Y60 F5000                                    
   #G1 X7.5 F5000
   #G1 Y110 F5000                                   ; speed decrease
   #G1 X10 F3600
   #G1 Y60 F3600
   #SET_SERVO SERVO=brush_servo ANGLE=3             ; set brush servo to down position
   RESTORE_GCODE_STATE MOVE=1 MOVE_SPEED=5000      ; return to starting position

[gcode_macro CLEAN_NOZZLE_IN]
gcode:
   SAVE_GCODE_STATE
   #G90
   #G1 X1 Z105 F5000
   SET_SERVO SERVO=brush_servo ANGLE=90           ; set brush servo to up position
   #G1 Y60 F3600                                    ; toolhead moves back and fourth across the brush
   #G1 X2.5 F3600
   #G1 Y110 F5000                                   ; speed increase
   #G1 X5 F5000                                     
   #G1 Y60 F5000                                    
   #G1 X7.5 F5000
   #G1 Y110 F5000                                   ; speed decrease
   #G1 X10 F3600
   #G1 Y60 F3600
   #SET_SERVO SERVO=brush_servo ANGLE=3             ; set brush servo to down position
   RESTORE_GCODE_STATE MOVE=1 MOVE_SPEED=5000      ; return to starting position

#####################################################################
#   Macros
#####################################################################
[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

##--------------------------------------------------------------------
## Uncomment below for V0 120mm build
z_positions:
  -44,14
  60,129
  164,14
points:
   5,115
   60,5
   115,115

## Uncomment below for Trident 250mm build
#z_positions:
#   -50, 18
#   125, 298
#   300, 18
#points:
#   30, 5
#   125, 195
#   220, 5


##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
[gcode_macro PRINT_START]
gcode:
  # Fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
 # {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer and sets absolute positioning
  G28                                                 # Full home (XYZ)
  G90                                                 # Absolute position
  G1 Z20 F3000                                        # move nozzle away from bed

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}
    #M106 S255                                         # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore/Bento Mini.
    SET_PIN PIN=BentoMini VALUE=1                    # Turn on the Nevermore/BentoBox
    #SET_FAN_SPEED FAN=exhaust_fan SPEED=1             # Turn on the exhaust fan

    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Go to center of the bed
    M190 S{target_bed}                                # Set target temp for the bed
   # TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Wait for chamber temp

  # If the bed temp is not over 90c it skips the heatsoak and just heats up to set temp with a 1 min soak.
  {% else %}
    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Go to center of the bed
    M190 S{target_bed}                                # Set target temp for the bed
    #G4 P300000                                        # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heats up the hotend up to target via slicer
  #M107                                                # Turn off partcooling fan
  M109 S{target_extruder}                             # Heat hotend to print temp

  # Manual nozzle clean
  G1 Z1.0 F3000 ; move z up little to prevent scratching of surface
  G1 Z60 F1000 ; move z up for manual nozzle clean
  G4 P6000 ; pause 6 seconds

  # Create a prime line and starts the print
  #G1 X5 Y4 Z0.4 F10000                                # Go to starting point
  #G1 X115 E20 F1000                                   # Primeline

  # Adaptive purging
  LINE_PURGE                                           # Default purge line
  #VORON_PURGE                                          # Voron logo purge line
  
  # Setup Skew
  SKEW_PROFILE LOAD=CaliFlower

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:

    SET_SKEW CLEAR=1               ; clear skew
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    #G1 E-4.0 F3600                 ; retract filament
    G1 E-2.0 F3600                 ; retract filament
    G91                            ; relative positioning
    #G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing

    TURN_OFF_HEATERS
    M107                           ; turn off fan
#    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
#    G0  X60 Y120 F3600             ; park nozzle at rear
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
   # G4 P1200000                    ; wait 20min
   # SET_PIN PIN=BentoMini VALUE=0  ; Turn off the Nevermore/BentoBox
    
	
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E100 F1800                   ; quickly load filament to down hotend (Sherpa Mini)
   G1 E25 F200                    ; slower extrusion for hotend path
   G1 E6 F125                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E6 F100                    ; extrude a little to soften tip
   #G1 E-380 F1800                 ; retract filament completely
   G1 E-120 F1800                  ; retract filament completely (Sherpa Mini)
   M82                            ; set extruder to absolute

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X-60 F1200
    
    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-60 F1200

    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z
    G1 Z30

[pause_resume]

[gcode_macro M600]
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
    

[gcode_macro HEAT_SOAK]
#uncomment HEAT_SOAK lines in PRINT_START to enable
gcode:
    G28
    G0 X60 Y60 Z30                                   ; move toolhead to centre
    PAUSE
    M106 S255                                        ; run cooling fans at full power
    M117
    UPDATE_DELAYED_GCODE ID=SOAK_TIME DURATION=600   ; resume after 300 seconds


[delayed_gcode SOAK_TIME]
gcode:
    RESUME
    M107                                             ; turn off cooling fans

[gcode_macro SKIP_HEAT_SOAK]
gcode:
    RESUME
    UPDATE_DELAYED_GCODE ID=SOAK_TIME DURATION=1

[pause_resume]

#recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

#[gcode_macro PAUSE]
#rename_existing: BASE_PAUSE
#default_parameter_X: 120    #edit to your park position
#default_parameter_Y: 120   #edit to your park position
#default_parameter_Z: 10     #edit to your park position
#default_parameter_E: 1      #edit to your retract length
#gcode:
#    SAVE_GCODE_STATE NAME=PAUSE_state
#    BASE_PAUSE
#    G91
#    G1 E-{E} F2100
#    G1 Z{Z}
#    G90
#    G1 X{X} Y{Y} F6000
    
#[gcode_macro RESUME]
#rename_existing: BASE_RESUME
#default_parameter_E: 1      #edit to your retract length
#gcode:
#    G91
#    G1 E{E} F2100
#    G90
#    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
#    BASE_RESUME
    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

#####################################################################
#  DISPLAY
#####################################################################

#[mcu displayEncoder]
#serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_290020001043534137393720-if00
#restart_method: command

#[display]
#lcd_type: sh1106
#i2c_mcu: displayEncoder
#i2c_bus: i2c1a
#encoder_pins: ^displayEncoder:PA4, ^displayEncoder:PA3
#click_pin: ^!displayEncoder:PA1
#kill_pin: ^!displayEncoder:PA5
#x_offset: 2
#   Use X offset to shift the display towards the right. Value can be 0 to 3
#vcomh: 31
#   Set the Vcomh value on SSD1306/SH1106 displays. This value is
#   associated with a "smearing" effect on some OLED displays. The
#   value may range from 0 to 63. Default is 0.
#   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)

#[neopixel displayStatus]
#pin: displayEncoder:PA0
#chain_count: 1
#color_order: GRB
#initial_RED: 0.50
#initial_GREEN: 0
#initial_BLUE: 0

##  To control Neopixel RGB
[neopixel LEDs]
pin: PA8
chain_count: 3
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0
color_order: GRB 


#####################################################################
#   Zboard Unassigned - Original Assigned Pins
#####################################################################

#[extruder]
#step_pin: zboard:PB3
#dir_pin: !zboard:PB4	# Remove the ! if stepper is moving the opposite direction
#enable_pin: !zboard:PD2
#rotation_distance: 22.68 #calibrate this value for your individual printer!!
#gear_ratio: 50:17
#microsteps: 16
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: zboard:PC8
#sensor_type: EPCOS 100K B57560G104F
#sensor_pin: zboard:PA0
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 270
#min_extrude_temp: 0
#max_extrude_only_distance: 780.0
#max_extrude_cross_section: .8
#Pressure_advance: 0.0
#pressure_advance_smooth_time: 0.040

#[tmc2209 extruder]
#uart_pin: zboard:PC11
#interpolate: True
#run_current: 0.2
#hold_current: 0.2
#sense_resistor: 0.110
#stealthchop_threshold: 500

#[heater_bed]
#heater_pin: zboard:PC12
##sensor_type: NTC 100K beta 3950
#sensor_type: NTC 100K MGB18-104F39050L32
#sensor_pin: zboard:PC3
#smooth_time: 3.0
#max_power: 0.6
#control: pid
#min_temp: 0
#max_temp: 120
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#[heater_fan hotend_fan]
#pin: zboard:PA8
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0
#If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

#[fan]
#pin: zboard:PC9
#kick_start_time: 0.5
#depending on your fan, you may need to increase or reduce this value
#if your fan will not start
#off_below: 0.13
#cycle_time: 0.010

#####################################################################
#  KLIPPIAN Shake & Tune
#####################################################################
[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
# number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 36.178
#*# pid_ki = 0.720
#*# pid_kd = 454.480
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.172
#*# pid_ki = 1.212
#*# pid_kd = 101.436
#*#
#*# [stepper_z]
#*# position_endstop = 0.159
#*#
#*# [skew_correction CaliFlower]
#*# xy_skew = -0.0006030763491556601
#*# xz_skew = 0.0
#*# yz_skew = 0.0
